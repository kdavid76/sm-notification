server:
  port: 1903
spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP}
    defaults:
      partitions: 1
      replicas: 1
    consumer:
      group-id: "notification"
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      # value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring.json.trusted.packages: "com.bkk.sm.common.kafka.*"
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  mail:
    default-encoding: UTF-8
    host: ${MAIL_SENDER_HOST}
    port: ${MAIL_SENDER_PORT}
    username: ${MAIL_SENDER_USERNAME}
    password: ${MAIL_SENDER_PASSWORD}
    protocol: ${MAIL_SENDER_PROTOCOL}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SENDER_AUTH}
          starttls:
            enable: ${MAIL_SENDER_STARTTLS_ENABLE}
sm:
  notification:
    enabled: true
    email:
      enabled: true
    sms:
      enabled: true
